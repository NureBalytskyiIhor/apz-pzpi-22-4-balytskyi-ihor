МІНІСТЕРСТВО ОСВІТИ ТА НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
 
 
ЗВІТ
з лабораторної роботи № 2
з дисципліни “Архітектура програмного забезпечення” 
на тему “Мобільний застосунок”


 
 
Виконав:                                                                       Прийняв:                                                                                
ст гр ПЗПІ-22-4                                                               асистент кафедри ПІ 
Балицький І.О.                                                Дашенков Дмитро Сергійович






 
















 
Харків 2025
Мета роботи
На цій лабораторній роботі потрібно розробити мобільний програмний застосунок для будь-якої поширеної на сьогодні мобільної платформи. Мобільний застосунок повинен бути частиною системи і повинен взаємодіяти з нею.


Хід роботи
1. Опис мобільного застосунку 
Мобільний застосунок є частиною комплексної інформаційної системи "Система для організації благодійних ініціатив та збору коштів". Він призначений для взаємодії користувачів з благодійними зборами, перегляду активних кампаній, здійснення пожертвувань, а також для створення нових зборів (для верифікованих користувачів). 


Застосунок реалізований для платформи Android із використанням Kotlin та Jetpack Compose. У якості серверної частини використано Node.js + Express з базою даних MongoDB Atlas.


2. Прийняті інженерні рішення
* Для розробки UI обрано Jetpack Compose, що дозволяє створювати декларативний інтерфейс із мінімальними зусиллями. 
* Взаємодія з сервером здійснюється через бібліотеку Retrofit. 
* Уся логіка управління даними винесена у ViewModel, згідно з архітектурою MVVM. 
* Для зберігання та обробки моделей запитів створено окремий пакет model.requests. 
* Було реалізовано розмежування функціональності: 
   * Звичайні користувачі: перегляд зборів, донати, профіль, історія 
   * Верифіковані користувачі: створення зборів, новини до зборів.
* Дані кешуються в памʼяті за допомогою mutableStateOf, щоб забезпечити реактивне оновлення інтерфейсу.


3. Будова мобільного застосунку 
Проєкт структурований у вигляді модулів: 
* screens/ — основні екрани застосунку, згруповані за функціональністю (auth, donations, profile тощо) 
* model/ — моделі сутностей: User, Donation, DonationLog, 
* NewsPost model/requests/ — запити: LoginRequest, RegisterRequest,CreateDonationRequest 
* network/ — опис API та створення Retrofit-інстансу 
* ui/ — вхідна точка (MainActivity), загальні компоненти (BottomNavigation тощо)


 4. Взаємодія з іншими частинами системи
Мобільний застосунок взаємодіє з бекендом через HTTP-запити до REST API:








Таблиця 1 -  HTTP-запити
Дія
	Запит до API
	Метод
	Реєстрація
	/api/users/register
	POST
	Авторизація
	/api/users/login
	POST
	Отримати всі збори
	/api/donations
	GET
	Отримати збори користувача
	/api/donations/user/{userId}
	GET
	Створити збір
	/api/donations/user/{userId}
	POST
	Додати новину
	/api/donations/{id}/news
	POST
	Отримати донати користувача
	/api/donation-logs/{userId}
	GET
	Донат
	/api/donations/{id}/donate
	POST
	











Висновки:
Розроблений мобільний застосунок повністю реалізує ключову функціональність системи: підтримує авторизацію, перегляд зборів, створення заявок, донати та новини. Архітектура розділена логічно, застосунок легко масштабувати і підтримувати. Завдяки використанню ViewModel, Retrofit, Jetpack Compose — забезпечено високу реактивність і якість UI.
________________


ДОДАТОК А
UML - діаграма прецедентів для мобільного клієнту
  

Рисунок 1 - UML - діаграма прецедентів 
________________


ДОДАТОК Б
UML діаграма компонент (Component Diagram)
  

Рисунок 2 - Component Diagram
________________


ДОДАТОК В
Er-діаграма
  

Рисунок 3 - ER-модель (Entity–Relationship Model)
________________


ДОДАТОК Г
UML діаграма діяльності (Activity Diagram)
Сценарій: створення нового збору верифікованим користувачем:
  

Рисунок 4 - UML діаграма діяльності (Activity Diagram)